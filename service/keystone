#!/bin/bash
KEYSTONE_CONF_FILE=/etc/keystone/keystone.conf
SUB_SCRIPT_NAME=keystone

help()
{
  echo "usage: $SCRIPT_NAME $SUB_SCRIPT_NAME <config|clean|start|stop|restart>"
}

create_user()
{
  keystone tenant-create --name $SET_KEYSTONE_ADMIN_TENANT --description "${SET_KEYSTONE_ADMIN} Tenant"
  keystone user-create --name $SET_KEYSTONE_ADMIN --pass $SET_KEYSTONE_ADMIN_PASS --email $SET_YOUR_EMAIL
  keystone role-create --name $SET_KEYSTONE_ADMIN_ROLE
  keystone user-role-add --tenant $SET_KEYSTONE_ADMIN_TENANT --user $SET_KEYSTONE_ADMIN --role $SET_KEYSTONE_ADMIN_ROLE
  keystone role-create --name _member_
  keystone user-role-add --tenant $SET_KEYSTONE_ADMIN_TENANT --user $SET_KEYSTONE_ADMIN --role _member_
}

create_service()
{
  keystone tenant-create --name service --description "Service Tenant"
  keystone service-create --name keystone --type identity --description "OpenStack Identity"
  keystone endpoint-create \
  --service-id $(keystone service-list | awk '/ identity / {print $2}') \
  --publicurl http://$SET_CONTROLLER_IP:5000/v2.0 \
  --internalurl http://$SET_CONTROLLER_IP:5000/v2.0 \
  --adminurl http://$SET_CONTROLLER_IP:35357/v2.0 \
  --region regionOne
}

do_config()
{
  set_database "keystone" $SET_KEYSTONE_DBPASS
 
  set_conf_arg "admin_token=" $SET_OS_SERVICE_TOKEN $KEYSTONE_CONF_FILE
  set_conf_arg "connection=" "mysql:\/\/keystone:$SET_KEYSTONE_DBPASS@$SET_CONTROLLER_IP:$SET_MYSQL_PORT\/keystone" $KEYSTONE_CONF_FILE
  set_conf_arg "verbose=" "True" $KEYSTONE_CONF_FILE

  sudo su -s /bin/sh -c "keystone-manage db_sync" keystone
  do_service restart

  echo "Waiting for service keystone start..."
  sleep 5
  source $SERVICE_ENV_FILE
  create_user
  create_service
  source $ADMIN_ENV_FILE
}

do_service()
{
  sudo service keystone $1
}

do_clean_expired_token()
{
  (crontab -l -u keystone 2>&1 | grep -q token_flush) || \
  echo '@hourly /usr/bin/keystone-manage token_flush >/var/log/keystone/keystone-tokenflush.log 2>&1' \
  >> /var/spool/cron/crontabs/keystone
}

if [ $# -lt 2 ]; then
  help
elif [ "config" = $2 ]; then
  do_config
elif [ "clean" = $2 ]; then
  do_clean_expired_token
elif [ "start" = $2 -o "stop" = $2 -o "restart" = $2 ]; then
  do_service $2
else
  help
fi
