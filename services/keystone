#!/bin/bash
PACKAGE_LIST="keystone python-keystoneclient"
SERVICE_LIST="keystone"
KEYSTONE_CONF_FILE=/etc/keystone/keystone.conf

func_keystone_clean()
{
  delete_user
  drop_database $SERVICE_NAME
}

func_keystone_config()
{
  set_database $SERVICE_NAME $SET_KEYSTONE_DBPASS
  edit_conf
  sudo su -s /bin/sh -c "keystone-manage db_sync" $SERVICE_NAME
  func_service restart
  echo "Waiting for service keystone start..."
  sleep 5
  delete_user
  create_user
  load_admin_env
}

edit_conf()
{
  set_conf_arg "admin_token" "admin_token=${SET_OS_SERVICE_TOKEN}" $KEYSTONE_CONF_FILE
  set_conf_arg "connection" "connection=mysql://$SERVICE_NAME:$SET_KEYSTONE_DBPASS@$SET_CONTROLLER_IP:$SET_MYSQL_PORT/$SERVICE_NAME" $KEYSTONE_CONF_FILE
  set_conf_arg "verbose" "verbose=True" $KEYSTONE_CONF_FILE
}

create_user()
{
  load_service_env
  keystone tenant-create --name $SET_KEYSTONE_ADMIN_TENANT --description "${SET_KEYSTONE_ADMIN} Tenant"
  keystone user-create --name $SET_KEYSTONE_ADMIN --pass $SET_KEYSTONE_ADMIN_PASS
  keystone role-create --name $SET_KEYSTONE_ADMIN_ROLE
  keystone user-role-add --tenant $SET_KEYSTONE_ADMIN_TENANT --user $SET_KEYSTONE_ADMIN --role $SET_KEYSTONE_ADMIN_ROLE
  keystone role-create --name _member_
  keystone user-role-add --tenant $SET_KEYSTONE_ADMIN_TENANT --user $SET_KEYSTONE_ADMIN --role _member_

  keystone tenant-create --name service --description "Service Tenant"
  keystone service-create --name $SERVICE_NAME --type identity --description "OpenStack Identity"
  keystone endpoint-create \
  --service-id $(keystone service-list | awk '/ identity / {print $2}') \
  --publicurl http://$SET_CONTROLLER_IP:5000/v2.0 \
  --internalurl http://$SET_CONTROLLER_IP:5000/v2.0 \
  --adminurl http://$SET_CONTROLLER_IP:35357/v2.0 \
  --region regionOne
}

delete_user()
{
  load_service_env
  keystone user-delete $SET_KEYSTONE_ADMIN
  keystone service-delete $SERVICE_NAME
  keystone tenant-delete $SET_KEYSTONE_ADMIN_TENANT
  keystone tenant-delete service
  keystone role-delete $SET_KEYSTONE_ADMIN_ROLE
  keystone role-delete _member_
}

clean_expired_token()
{
  (crontab -l -u keystone 2>&1 | grep -q token_flush) || \
  echo '@hourly /usr/bin/keystone-manage token_flush >/var/log/keystone/keystone-tokenflush.log 2>&1' \
  >> /var/spool/cron/crontabs/keystone
}
