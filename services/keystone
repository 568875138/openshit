#!/bin/bash
import $SERVICE_DATABASE
import $SERVICE_MESSAGE_QUEUE

PACKAGE_LIST="keystone python-keystoneclient"
SERVICE_LIST="keystone"
KEYSTONE_CONF_FILE=/etc/keystone/keystone.conf

func_keystone_clean()
{
  load_service_env
  delete_user
  $SERVICE_DATABASE"_drop" $SERVICE_NAME
}

func_keystone_config()
{
  $SERVICE_DATABASE"_create" $SERVICE_NAME $SET_KEYSTONE_DBPASS

  set_conf_arg "admin_token" "admin_token=${SET_OS_SERVICE_TOKEN}" $KEYSTONE_CONF_FILE
  set_conf_arg "connection" "connection=mysql://$SERVICE_NAME:$SET_KEYSTONE_DBPASS@$SET_CONTROLLER_IP:$SET_MYSQL_PORT/$SERVICE_NAME" $KEYSTONE_CONF_FILE
  set_conf_arg "verbose" "verbose=True" $KEYSTONE_CONF_FILE

  sudo su -s /bin/sh -c "keystone-manage db_sync" $SERVICE_NAME
  func_service restart
  echo "Waiting for service keystone start..."
  sleep 5

  # delete user
  load_service_env
  delete_user
  # create user
  create_user
  load_admin_env
}

create_user()
{
  keystone tenant-create --name $SET_KEYSTONE_ADMIN_TENANT --description "${SET_KEYSTONE_ADMIN} Tenant"
  keystone user-create --name $SET_KEYSTONE_ADMIN --pass $SET_KEYSTONE_ADMIN_PASS
  keystone role-create --name $SET_KEYSTONE_ADMIN_ROLE
  keystone user-role-add --tenant $SET_KEYSTONE_ADMIN_TENANT --user $SET_KEYSTONE_ADMIN --role $SET_KEYSTONE_ADMIN_ROLE
  keystone role-create --name _member_
  keystone user-role-add --tenant $SET_KEYSTONE_ADMIN_TENANT --user $SET_KEYSTONE_ADMIN --role _member_

  keystone tenant-create --name service --description "Service Tenant"
  keystone service-create --name $SERVICE_NAME --type identity

  keystone_create_endpoint $SERVICE_NAME \
    http://$SET_KEYSTONE_IP:5000/v2.0 \
    http://$SET_KEYSTONE_IP:5000/v2.0 \
    http://$SET_KEYSTONE_IP:35357/v2.0
}

delete_user()
{
  keystone user-delete $SET_KEYSTONE_ADMIN
  keystone service-delete $SERVICE_NAME
  keystone tenant-delete $SET_KEYSTONE_ADMIN_TENANT
  keystone tenant-delete service
  keystone role-delete $SET_KEYSTONE_ADMIN_ROLE
  keystone role-delete _member_
}

clean_expired_token()
{
  (crontab -l -u keystone 2>&1 | grep -q token_flush) || \
  echo '@hourly /usr/bin/keystone-manage token_flush >/var/log/keystone/keystone-tokenflush.log 2>&1' \
  >> /var/spool/cron/crontabs/keystone
}

# Use by other script

# args: user pass config_file
keystone_set_conf()
{
  local USER=$1
  local PASS=$2
  local CONFIG_FILE=$3
  add_args_to_section $CONFIG_FILE "\[keystone_authtoken\]" "auth_uri" \
    "identity_uri" "admin_tenant_name" "admin_user" "admin_password"

  set_conf_arg "auth_uri" "auth_uri = ${SET_KEYSTONE_AUTH_URL_PUBLIC}" $CONFIG_FILE
  set_conf_arg "identity_uri" "identity_uri = http://${SET_KEYSTONE_IP}:35357" $CONFIG_FILE
  set_conf_arg "admin_tenant_name" "admin_tenant_name = service" $CONFIG_FILE
  set_conf_arg "admin_user" "admin_user = $USER" $CONFIG_FILE
  set_conf_arg "admin_password" "admin_password = $PASS" $CONFIG_FILE

  set_conf_arg "flavor" "flavor = keystone" $CONFIG_FILE
}

# args: user pass
keystone_edit_conf()
{
  local USER=$1
  local PASS=$2

  echo "[keystone_authtoken]"
  echo "auth_uri = ${SET_KEYSTONE_AUTH_URL_PUBLIC}"
  echo "identity_uri = http://${SET_KEYSTONE_IP}:35357"
  echo "admin_tenant_name = service"
  echo "admin_user = $USER"
  echo "admin_password = $PASS"

  echo "[paste_deploy]"
  echo "flavor" "flavor = keystone"
}

# args: user pass type
keystone_create_user_service()
{
  load_admin_env
  local USER=$1
  local PASS=$2
  local TYPE=$3
  keystone user-create --name $USER --pass $PASS
  keystone user-role-add --user $USER --tenant service --role $SET_KEYSTONE_ADMIN_ROLE
  keystone service-create --name $USER --type $TYPE
}

# args: service_name public_url internal_url admin_url
keystone_create_endpoint()
{
  local SERV_NAME=$1
  local PURL=$2
  local IURL=$3
  local AURL=$4

  keystone endpoint-create \
    --service-id $(keystone service-list | grep $SERV_NAME | awk '{print $2}') \
    --publicurl $PURL \
    --internalurl $IURL \
    --adminurl $AURL \
    --region regionOne
}

# args: service_name
keystone_delete_user_service()
{
  local SERV_NAME=$1
  load_admin_env
  keystone user-delete $SERV_NAME
  keystone service-delete $SERV_NAME
}
