#!/bin/bash
GLANCE_API_CONF_FILE=/etc/glance/glance-api.conf
GLANCE_REGISTRY_CONF=/etc/glance/glance-registry.conf
PACKAGES="glance python-glanceclient"

help()
{
  echo "usage: $SCRIPT_NAME $SERVICE_NAME <install|download|uninstall|clean|config|start|stop|restart>"
}

clean()
{
  delete_user
  drop_database $SERVICE_NAME
}

service()
{
  sudo service glance-registry $1
  sudo service glance-api $1
}

config()
{
  set_database $SERVICE_NAME $SET_GLANCE_DBPASS
  source $ADMIN_ENV_FILE
  delete_user
  create_user
  edit_conf
  sudo su -s /bin/sh -c "glance-manage db_sync" $SERVICE_NAME
  service restart
}

edit_conf()
{
  #config $GLANCE_API_CONFIG_FILE
  add_args_to_section $GLANCE_API_CONF_FILE "\[keystone_authtoken\]" "auth_uri"

  set_conf_arg "connection" "connection = mysql://$SERVICE_NAME:$SET_GLANCE_DBPASS@$SET_CONTROLLER_IP:$SET_MYSQL_PORT/$SERVICE_NAME" $GLANCE_API_CONF_FILE
  set_conf_arg "auth_uri" "auth_uri = ${SET_KEYSTONE_AUTH_URL}" $GLANCE_API_CONF_FILE
  set_conf_arg "admin_tenant_name" "admin_tenant_name = ${SET_KEYSTONE_ADMIN_TENANT}" $GLANCE_API_CONF_FILE
  set_conf_arg "admin_user" "admin_user = ${SET_KEYSTONE_ADMIN}" $GLANCE_API_CONF_FILE
  set_conf_arg "admin_password" "admin_password = ${SET_KEYSTONE_ADMIN_PASS}" $GLANCE_API_CONF_FILE
  set_conf_arg "flavor" "flavor = keystone" $GLANCE_API_CONF_FILE
  set_conf_arg "verbose" "verbose = True" $GLANCE_API_CONF_FILE

  #config $GLANCE_REGISTRY_CONF
  add_args_to_section $GLANCE_REGISTRY_CONF "\[keystone_authtoken\]" "auth_uri"

  set_conf_arg "connection" "connection = mysql://glance:$SET_GLANCE_DBPASS@$SET_CONTROLLER_IP:$SET_MYSQL_PORT/glance" $GLANCE_REGISTRY_CONF
  set_conf_arg "auth_uri" "auth_uri = ${SET_KEYSTONE_AUTH_URL_PUBLIC}" $GLANCE_REGISTRY_CONF
  set_conf_arg "admin_tenant_name" "admin_tenant_name = ${SET_KEYSTONE_ADMIN_TENANT}" $GLANCE_REGISTRY_CONF
  set_conf_arg "admin_user" "admin_user = ${SET_KEYSTONE_ADMIN}" $GLANCE_REGISTRY_CONF
  set_conf_arg "admin_password" "admin_password = ${SET_KEYSTONE_ADMIN_PASS}" $GLANCE_REGISTRY_CONF
  set_conf_arg "flavor" "flavor = keystone" $GLANCE_REGISTRY_CONF
  set_conf_arg "verbose" "verbose = True" $GLANCE_REGISTRY_CONF
}

create_user()
{
  keystone user-create --name $SERVICE_NAME --pass $SET_GLANCE_PASS
  keystone user-role-add --user $SERVICE_NAME --tenant service --role $SET_KEYSTONE_ADMIN_ROLE

  keystone service-create --name $SERVICE_NAME --type image \
    --description "OpenStack Image Service"
  keystone endpoint-create \
    --service-id $(keystone service-list | awk '/ image / {print $2}') \
    --publicurl http://$SET_CONTROLLER_IP:9292 \
    --internalurl http://$SET_CONTROLLER_IP:9292 \
    --adminurl http://$SET_CONTROLLER_IP:9292 \
    --region regionOne
}

delete_user()
{
  keystone user-delete $SERVICE_NAME
  keystone service-delete $SERVICE_NAME
}

if [ $# -lt 2 ]; then
  help
elif [ "clean" = $2 ]; then
  clean
elif [ "config" = $2 ]; then
  config
elif [ "start" = $2 -o "stop" = $2 -o "restart" = $2 ]; then
  service $2
elif [  "install" = $2 ]; then
  install $PACKAGES
elif [  "uninstall" = $2 ]; then
  uninstall $PACKAGES
elif [  "download" = $2 ]; then
  download $PACKAGES
else
  help
fi
