#!/bin/bash
CINDER_CONF_FILE=/etc/cinder/cinder.conf
PACKAGES="cinder-api cinder-scheduler python-cinderclient cinder-volume"

help()
{
  echo "usage: $SCRIPT_NAME $SERVICE_NAME <install|download|uninstall|clean|config|start|stop|restart>"
}

clean()
{
  delete_user
  drop_database $SERVICE_NAME
}

service()
{
  sudo service cinder-scheduler $1
  sudo service cinder-api $1
  sudo service cinder-volume $1
  sudo service tgt $1
}

config()
{
  set_database $SERVICE_NAME $SET_CINDER_DBPASS
  source $ADMIN_ENV_FILE
  delete_user
  create_user
  edit_conf
  sudo su -s /bin/sh -c "cinder-manage db sync" $SERVICE_NAME
  service restart
}

edit_conf()
{
  #config CINDER_CONF_FILE
  add_args_to_section $CINDER_CONF_FILE "\[DEFAULT\]" "rpc_backend" "rabbit_host" \
    "rabbit_password" "my_ip" "auth_strategy" "verbose" "glance_host"
  add_args_to_section $CINDER_CONF_FILE "\[database\]" "connection"
  add_args_to_section $CINDER_CONF_FILE "\[keystone_authtoken\]" "auth_uri" \
    "identity_uri" "admin_tenant_name" "admin_user" "admin_password"

  set_conf_arg "connection" "connection = mysql://$SERVICE_NAME:$SET_CINDER_DBPASS@$SET_CONTROLLER_IP:$SET_MYSQL_PORT/$SERVICE_NAME" $CINDER_CONF_FILE

  set_conf_arg "verbose" "verbose = True" $CINDER_CONF_FILE

  set_conf_arg "auth_uri" "auth_uri = ${SET_KEYSTONE_AUTH_URL_PUBLIC}" $CINDER_CONF_FILE
  set_conf_arg "identity_uri" "identity_uri = http://$SET_CONTROLLER:35357" $CINDER_CONF_FILE
  set_conf_arg "admin_tenant_name" "admin_tenant_name = service" $CINDER_CONF_FILE
  set_conf_arg "admin_user" "admin_user = $SERVICE_NAME" $CINDER_CONF_FILE
  set_conf_arg "admin_password" "admin_password = $SET_CINDER_PASS" $CINDER_CONF_FILE

  set_conf_arg "rpc_backend" "rpc_backend = rabbit" $CINDER_CONF_FILE
  set_conf_arg "rabbit_host" "rabbit_host = $SET_CONTROLLER_IP" $CINDER_CONF_FILE
  set_conf_arg "rabbit_password" "rabbit_password = $SET_RABBITMQ_PASS" $CINDER_CONF_FILE

  set_conf_arg "my_ip" "my_ip = $SET_CONTROLLER_IP" $CINDER_CONF_FILE
  set_conf_arg "glance_host" "glance_host = $SET_CONTROLLER_IP" $CINDER_CONF_FILE
}

create_user()
{
  keystone user-create --name $SERVICE_NAME --pass $SET_CINDER_PASS
  keystone user-role-add --user $SERVICE_NAME --tenant service --role $SET_KEYSTONE_ADMIN_ROLE

  keystone service-create --name $SERVICE_NAME --type volume \
    --description "OpenStack Block Storage"
  keystone endpoint-create \
    --service-id $(keystone service-list | awk '/ volume / {print $2}') \
    --publicurl http://$SET_CONTROLLER_IP:8776/v1/%\(tenant_id\)s \
    --internalurl http://$SET_CONTROLLER_IP:8776/v1/%\(tenant_id\)s \
    --adminurl http://$SET_CONTROLLER_IP:8776/v1/%\(tenant_id\)s \
    --region regionOne
}

delete_user()
{
  keystone user-delete $SERVICE_NAME
  keystone service-delete $SERVICE_NAME
}

if [ $# -lt 2 ]; then
  help
elif [ "clean" = $2 ]; then
  clean
elif [ "config" = $2 ]; then
  config
elif [ "start" = $2 -o "stop" = $2 -o "restart" = $2 ]; then
  service $2
elif [  "install" = $2 ]; then
  install $PACKAGES
elif [  "uninstall" = $2 ]; then
  uninstall $PACKAGES
elif [  "download" = $2 ]; then
  download $PACKAGES
else
  help
fi
